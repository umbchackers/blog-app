{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dledb\\\\blog-app\\\\src\\\\pages\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { auth, provider } from \"../firebase-config\";\nimport { signInWithPopup } from \"firebase/auth\";\nimport { useNavigate } from \"react-router-dom\"; // grabbing this function as probs?\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login(_ref) {\n  _s();\n\n  let {\n    setIsAuth\n  } = _ref;\n  // line is neccessary because react hooks must be inside a function component.\n  let navigate = useNavigate(); // note javascript arrow functions are like lambda functions from CMSC 331\n\n  const SignInWithGoogle = () => {\n    signInWithPopup(auth, provider).then(result => {\n      localStorage.setItem(\"isAuth\", true);\n      setIsAuth(true);\n      navigate(\"/\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Sign in with Google to continue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"google-login\",\n      onClick: SignInWithGoogle,\n      children: \" Sign in with Google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","auth","provider","signInWithPopup","useNavigate","Login","setIsAuth","navigate","SignInWithGoogle","then","result","localStorage","setItem"],"sources":["C:/Users/dledb/blog-app/src/pages/Login.js"],"sourcesContent":["import React from \"react\";\r\nimport {auth, provider} from \"../firebase-config\";\r\nimport {signInWithPopup} from \"firebase/auth\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n// grabbing this function as probs?\r\nfunction Login({setIsAuth})\r\n{\r\n    // line is neccessary because react hooks must be inside a function component.\r\n    let navigate = useNavigate();\r\n\r\n    // note javascript arrow functions are like lambda functions from CMSC 331\r\n    const SignInWithGoogle = () => {\r\n      signInWithPopup(auth, provider).then((result) => {\r\n        localStorage.setItem(\"isAuth\", true);\r\n        setIsAuth(true);\r\n        navigate(\"/\")\r\n      })  \r\n    }\r\n\r\n\r\n    return (\r\n    \r\n        <div className=\"loginPage\">\r\n         <p> Sign in with Google to continue</p>\r\n         <button className=\"google-login\" onClick={SignInWithGoogle}> Sign in with Google</button> \r\n         </div>\r\n    );\r\n}\r\n\r\nexport default Login;"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,EAAcC,QAAd,QAA6B,oBAA7B;AACA,SAAQC,eAAR,QAA8B,eAA9B;AACA,SAASC,WAAT,QAA4B,kBAA5B,C,CACA;;;;AACA,SAASC,KAAT,OACA;EAAA;;EAAA,IADe;IAACC;EAAD,CACf;EACI;EACA,IAAIC,QAAQ,GAAGH,WAAW,EAA1B,CAFJ,CAII;;EACA,MAAMI,gBAAgB,GAAG,MAAM;IAC7BL,eAAe,CAACF,IAAD,EAAOC,QAAP,CAAf,CAAgCO,IAAhC,CAAsCC,MAAD,IAAY;MAC/CC,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA+B,IAA/B;MACAN,SAAS,CAAC,IAAD,CAAT;MACAC,QAAQ,CAAC,GAAD,CAAR;IACD,CAJD;EAKD,CAND;;EASA,oBAEI;IAAK,SAAS,EAAC,WAAf;IAAA,wBACC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADD,eAEC;MAAQ,SAAS,EAAC,cAAlB;MAAiC,OAAO,EAAEC,gBAA1C;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFD;EAAA;IAAA;IAAA;IAAA;EAAA,QAFJ;AAOH;;GAtBQH,K;UAGUD,W;;;KAHVC,K;AAwBT,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}