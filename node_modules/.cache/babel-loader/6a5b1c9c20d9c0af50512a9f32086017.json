{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dledb\\\\blog-app\\\\src\\\\pages\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport { collection, getDocs } from \"firebase/firestore\";\nimport React, { useEffect, useState } from \"react\";\nimport { db } from \"../firebase-config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  // needs to access all the lists from firestore\n  const [postLists, setPostList] = useState([]);\n  const postsCollectionRef = collection(db, \"posts\");\n  useEffect(() => {\n    // have to make another function because it must be asynchronous.\n    const getPosts = async () => {\n      const data = await getDocs(postsCollectionRef); // console.log(data);\n      // the ... operator creates a deep copy of the elements of the field.\n      // this is showing the data much more simply compared to just logging 'data'\n      // console.log(data.docs.map((doc) => ({...doc.data(), id: doc.id})));\n\n      setPostList(data.docs.map(doc => ({ ...doc.data(),\n        id: doc.id\n      })));\n    };\n\n    getPosts();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homePage\",\n    children: postLists.map(post => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postHeader\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title\",\n            children: [\" \", \" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: [\" \", post.title, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 35\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"R5fQ4uJwjidZLGAoAOIlmkY8vEc=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["collection","getDocs","React","useEffect","useState","db","Home","postLists","setPostList","postsCollectionRef","getPosts","data","docs","map","doc","id","post","title"],"sources":["C:/Users/dledb/blog-app/src/pages/Home.js"],"sourcesContent":["import { collection, getDocs } from \"firebase/firestore\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {db} from \"../firebase-config\";\r\nfunction Home()\r\n{\r\n    // needs to access all the lists from firestore\r\n\r\n    const [postLists, setPostList] = useState([]);\r\n    const postsCollectionRef = collection(db, \"posts\");\r\n\r\n    useEffect(() => {\r\n        // have to make another function because it must be asynchronous.\r\n        const getPosts = async () => {\r\n            const data = await getDocs(postsCollectionRef);\r\n            // console.log(data);\r\n            // the ... operator creates a deep copy of the elements of the field.\r\n            // this is showing the data much more simply compared to just logging 'data'\r\n            // console.log(data.docs.map((doc) => ({...doc.data(), id: doc.id})));\r\n            setPostList(data.docs.map((doc) => ({...doc.data(), id: doc.id})));\r\n        };\r\n        getPosts();\r\n    });\r\n    return (\r\n        <div className=\"homePage\"> \r\n            {postLists.map((post) => {\r\n                return (<div className=\"post\"> \r\n                    {\" \"}\r\n                    <div className=\"postHeader\">\r\n                        {\" \"}\r\n                        <div className=\"title\"> \r\n                            {\" \"} <h1> {post.title} </h1> \r\n                            </div>\r\n                    </div>\r\n                 </div>\r\n                );\r\n            })}  \r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Home;"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,OAArB,QAAoC,oBAApC;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAAQC,EAAR,QAAiB,oBAAjB;;;AACA,SAASC,IAAT,GACA;EAAA;;EACI;EAEA,MAAM,CAACC,SAAD,EAAYC,WAAZ,IAA2BJ,QAAQ,CAAC,EAAD,CAAzC;EACA,MAAMK,kBAAkB,GAAGT,UAAU,CAACK,EAAD,EAAK,OAAL,CAArC;EAEAF,SAAS,CAAC,MAAM;IACZ;IACA,MAAMO,QAAQ,GAAG,YAAY;MACzB,MAAMC,IAAI,GAAG,MAAMV,OAAO,CAACQ,kBAAD,CAA1B,CADyB,CAEzB;MACA;MACA;MACA;;MACAD,WAAW,CAACG,IAAI,CAACC,IAAL,CAAUC,GAAV,CAAeC,GAAD,KAAU,EAAC,GAAGA,GAAG,CAACH,IAAJ,EAAJ;QAAgBI,EAAE,EAAED,GAAG,CAACC;MAAxB,CAAV,CAAd,CAAD,CAAX;IACH,CAPD;;IAQAL,QAAQ;EACX,CAXQ,CAAT;EAYA,oBACI;IAAK,SAAS,EAAC,UAAf;IAAA,UACKH,SAAS,CAACM,GAAV,CAAeG,IAAD,IAAU;MACrB,oBAAQ;QAAK,SAAS,EAAC,MAAf;QAAA,WACH,GADG,eAEJ;UAAK,SAAS,EAAC,YAAf;UAAA,WACK,GADL,eAEI;YAAK,SAAS,EAAC,OAAf;YAAA,WACK,GADL,oBACU;cAAA,gBAAMA,IAAI,CAACC,KAAX;YAAA;cAAA;cAAA;cAAA;YAAA,QADV;UAAA;YAAA;YAAA;YAAA;UAAA,QAFJ;QAAA;UAAA;UAAA;UAAA;QAAA,QAFI;MAAA;QAAA;QAAA;QAAA;MAAA,QAAR;IAUH,CAXA;EADL;IAAA;IAAA;IAAA;EAAA,QADJ;AAgBH;;GAnCQX,I;;KAAAA,I;AAqCT,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}