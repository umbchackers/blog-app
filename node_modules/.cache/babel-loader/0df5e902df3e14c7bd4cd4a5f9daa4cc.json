{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dledb\\\\blog-app\\\\src\\\\pages\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport { collection, deleteDoc, getDocs, doc } from \"firebase/firestore\";\nimport React, { useEffect, useState } from \"react\";\nimport { db } from \"../firebase-config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  // needs to access all the lists from firestore\n  const [postLists, setPostList] = useState([]);\n  const postsCollectionRef = collection(db, \"posts\");\n  useEffect(() => {\n    // have to make another function because it must be asynchronous.\n    const getPosts = async () => {\n      const data = await getDocs(postsCollectionRef); // console.log(data);\n      // the ... operator creates a deep copy of the elements of the field.\n      // this is showing the data much more simply compared to just logging 'data'\n      // console.log(data.docs.map((doc) => ({...doc.data(), id: doc.id})));\n\n      setPostList(data.docs.map(doc => ({ ...doc.data(),\n        id: doc.id\n      })));\n    };\n\n    getPosts();\n  }); // \"id\" is imported from the webpage \n\n  const deletePost = async id => {\n    // delete doc requires a document specification parameter.\n    // within that parameter we will need to find the ID, however, we've imported that already.\n    const postDoc = doc(db, \"posts\", id);\n    await deleteDoc();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homePage\",\n    children: postLists.map(post => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postHeader\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: [\" \", post.title, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"deletePost\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                deletePost(post.id);\n              },\n              children: \" X \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postTextContainer\",\n          children: [\" \", post.postText, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"author\",\n          children: [\" @\", post.author.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"R5fQ4uJwjidZLGAoAOIlmkY8vEc=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["collection","deleteDoc","getDocs","doc","React","useEffect","useState","db","Home","postLists","setPostList","postsCollectionRef","getPosts","data","docs","map","id","deletePost","postDoc","post","title","postText","author","name"],"sources":["C:/Users/dledb/blog-app/src/pages/Home.js"],"sourcesContent":["import { collection, deleteDoc, getDocs, doc } from \"firebase/firestore\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { db } from \"../firebase-config\";\r\nfunction Home() {\r\n  // needs to access all the lists from firestore\r\n\r\n  const [postLists, setPostList] = useState([]);\r\n  const postsCollectionRef = collection(db, \"posts\");\r\n\r\n  useEffect(() => {\r\n    // have to make another function because it must be asynchronous.\r\n    const getPosts = async () => {\r\n      const data = await getDocs(postsCollectionRef);\r\n      // console.log(data);\r\n      // the ... operator creates a deep copy of the elements of the field.\r\n      // this is showing the data much more simply compared to just logging 'data'\r\n      // console.log(data.docs.map((doc) => ({...doc.data(), id: doc.id})));\r\n      setPostList(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\r\n    };\r\n    getPosts();\r\n  });\r\n\r\n  // \"id\" is imported from the webpage \r\n  const deletePost = async (id) => {\r\n    // delete doc requires a document specification parameter.\r\n    // within that parameter we will need to find the ID, however, we've imported that already.\r\n    const postDoc = doc(db, \"posts\", id)\r\n    await deleteDoc() \r\n  }\r\n\r\n  return (\r\n    <div className=\"homePage\">\r\n      {postLists.map((post) => {\r\n        return (<div className=\"post\">\r\n\r\n          <div className=\"postHeader\">\r\n\r\n            <div className=\"title\">\r\n              <h1> {post.title} </h1>\r\n            </div>\r\n            <div className=\"deletePost\">\r\n              <button onClick={\r\n                () => {deletePost(post.id)}\r\n              }> X </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"postTextContainer\"> {post.postText} </div>\r\n          <div className=\"author\"> @{post.author.name}</div>\r\n        </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,OAAhC,EAAyCC,GAAzC,QAAoD,oBAApD;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,EAAT,QAAmB,oBAAnB;;;AACA,SAASC,IAAT,GAAgB;EAAA;;EACd;EAEA,MAAM,CAACC,SAAD,EAAYC,WAAZ,IAA2BJ,QAAQ,CAAC,EAAD,CAAzC;EACA,MAAMK,kBAAkB,GAAGX,UAAU,CAACO,EAAD,EAAK,OAAL,CAArC;EAEAF,SAAS,CAAC,MAAM;IACd;IACA,MAAMO,QAAQ,GAAG,YAAY;MAC3B,MAAMC,IAAI,GAAG,MAAMX,OAAO,CAACS,kBAAD,CAA1B,CAD2B,CAE3B;MACA;MACA;MACA;;MACAD,WAAW,CAACG,IAAI,CAACC,IAAL,CAAUC,GAAV,CAAeZ,GAAD,KAAU,EAAE,GAAGA,GAAG,CAACU,IAAJ,EAAL;QAAiBG,EAAE,EAAEb,GAAG,CAACa;MAAzB,CAAV,CAAd,CAAD,CAAX;IACD,CAPD;;IAQAJ,QAAQ;EACT,CAXQ,CAAT,CANc,CAmBd;;EACA,MAAMK,UAAU,GAAG,MAAOD,EAAP,IAAc;IAC/B;IACA;IACA,MAAME,OAAO,GAAGf,GAAG,CAACI,EAAD,EAAK,OAAL,EAAcS,EAAd,CAAnB;IACA,MAAMf,SAAS,EAAf;EACD,CALD;;EAOA,oBACE;IAAK,SAAS,EAAC,UAAf;IAAA,UACGQ,SAAS,CAACM,GAAV,CAAeI,IAAD,IAAU;MACvB,oBAAQ;QAAK,SAAS,EAAC,MAAf;QAAA,wBAEN;UAAK,SAAS,EAAC,YAAf;UAAA,wBAEE;YAAK,SAAS,EAAC,OAAf;YAAA,uBACE;cAAA,gBAAMA,IAAI,CAACC,KAAX;YAAA;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA,QAFF,eAKE;YAAK,SAAS,EAAC,YAAf;YAAA,uBACE;cAAQ,OAAO,EACb,MAAM;gBAACH,UAAU,CAACE,IAAI,CAACH,EAAN,CAAV;cAAoB,CAD7B;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA,QALF;QAAA;UAAA;UAAA;UAAA;QAAA,QAFM,eAaN;UAAK,SAAS,EAAC,mBAAf;UAAA,gBAAqCG,IAAI,CAACE,QAA1C;QAAA;UAAA;UAAA;UAAA;QAAA,QAbM,eAcN;UAAK,SAAS,EAAC,QAAf;UAAA,iBAA2BF,IAAI,CAACG,MAAL,CAAYC,IAAvC;QAAA;UAAA;UAAA;UAAA;QAAA,QAdM;MAAA;QAAA;QAAA;QAAA;MAAA,QAAR;IAiBD,CAlBA;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAuBD;;GAlDQf,I;;KAAAA,I;AAoDT,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}